name: Tests

# Run this workflow on pushes and manually
on: [push, workflow_dispatch]

jobs:
  test:
    env:
      # vault-k8s version
      VERSION: "0.0.0-dev"
      TARBALL_FILE: vault-k8s-image.docker.tar
    outputs:
      version: ${{ env.VERSION }}
      tarball_file: ${{ env.TARBALL_FILE }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
        with:
          go-version-file: .go-version

      - name: Build
        run: |
          REGISTRY=hashicorp make build image
          docker save --output "${TARBALL_FILE}" hashicorp/vault-k8s:${{ env.VERSION }}

      - name: Test
        run: make test

      - uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: ${{ env.TARBALL_FILE }}
          path: ${{ env.TARBALL_FILE }}

  versions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "setting versions"
    outputs:
      # JSON encoded array of k8s versions.
      K8S_VERSIONS: '["1.31.2", "1.30.6", "1.29.10", "1.28.15", "1.27.16"]'
      VAULT_N: "1.18.2"
      VAULT_N_1: "1.17.6"
      VAULT_N_2: "1.16.3"

  latest-vault:
    name: vault:${{ matrix.vault-version }} kind:${{ matrix.k8s-version }}
    runs-on: ubuntu-latest
    needs:
      - test
      - versions
    strategy:
      fail-fast: false
      matrix:
        vault-version:
          - ${{ needs.versions.outputs.VAULT_N }}
        k8s-version: ${{ fromJson(needs.versions.outputs.K8S_VERSIONS) }}

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/integration-test
        name: vault:${{ matrix.vault-version }} kind:${{ matrix.k8s-version }}
        with:
          k8s-version: ${{ matrix.k8s-version }}
          vault-version: ${{ matrix.vault-version }}
          tarball-file: ${{ needs.test.outputs.tarball_file }}
          version: ${{ needs.test.outputs.version }}
          vault-license: ${{ secrets.VAULT_LICENSE_CI }}

  latest-k8s:
    name: vault:${{ matrix.vault-version }} kind:${{ matrix.k8s-version }}
    needs:
      - versions
      - test
    strategy:
      fail-fast: false
      matrix:
        k8s-version:
          - ${{ fromJson(needs.versions.outputs.K8S_VERSIONS)[0] }}
        vault-version:
          - ${{ needs.versions.outputs.VAULT_N_1 }}
          - ${{ needs.versions.outputs.VAULT_N_2 }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/integration-test
        name: vault:${{ matrix.vault-version }} kind:${{ matrix.k8s-version }}
        with:
          k8s-version: ${{ matrix.k8s-version }}
          vault-version: ${{ matrix.vault-version }}
          tarball-file: ${{ needs.test.outputs.tarball_file }}
          version: ${{ needs.test.outputs.version }}
          vault-license: ${{ secrets.VAULT_LICENSE_CI }}
